on:
  push:
  schedule:
    - cron: '0 0 */1 * *'
  workflow_dispatch:  

name: Test Registry

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker
        uses: docker/setup-docker-action@v4
        with:
          version: "26.1.4"
          channel: test
      - run: docker version
      - run: docker info
      - name: Test
        run: |
          registrys="
          cjie.eu.org
          cf-workers-docker-io-2cl.pages.dev
          dockerhub.timeweb.cloud
          docker.ketches.cn
          docker.m.daocloud.io
          docker.1ms.run
          docker.io
          docker.fxxk.dedyn.io
          dockerproxy.com
          hub.iyuu.cn
          hub.registry-mirrors.top
          hub-mirror.c.163.com
          hub.atomgit.com
          hub.docker.com
          registry.docker.com
          registry-1.docker.io
          mirror.gcr.io
          $ALIYUN_MIRROR
          "
          image="library/busybox:1.36.1"

          for registry in $registrys
          do
             echo ::group::Test $registry/$image
             docker pull $registry/$image \
               && (echo -e "\033[32m$registry is good\033[0m" \
                  ; echo "::warning file=README.md,line=1,col=0::OK [ $registry ] is good") \
               || (echo -e "\033[31m$registry is outdated\033[0m" \
                  ; echo "::error file=README.md,line=1,col=0::X [ $registry ] is outdated")
             docker rmi $registry/$image || true
             echo ::endgroup::
          done
          
          IMAGE=busybox
          MIRROR=https://dockerhub.icu
          NUM_TRIALS=5

          echo "Testing $MIRROR with $IMAGE"

          total_time=0

          for i in $(seq 1 $NUM_TRIALS); do
          echo "Trial $i"
          start_time=$(date +%s.%N)
          docker pull $IMAGE
          end_time=$(date +%s.%N)
          elapsed_time=$(echo "$end_time - $start_time" | bc)
          total_time=$(echo "$total_time + $elapsed_time" | bc)
          docker rmi $IMAGE
          done

          average_time=$(echo "scale=2; $total_time / $NUM_TRIALS" | bc)
          echo "::warning $MIRROR is ok Average pull time: $average_time seconds "
        env:
          ALIYUN_MIRROR: ${{secrets.ALIYUN_MIRROR}}
